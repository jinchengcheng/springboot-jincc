spring:
  name: 测试
  profiles:  #表示所用配置文件为application-dev.yml
    active: dev
    #如果需要使用thymeleaf 开启下面的属性
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    encoding: UTF-8
#    cache: false
    #配置messages的路径
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/springboot?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: password
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initial-size: 1
    min-idle: 3
    max-active: 20
    # 配置获取连接等待超时的时间
    max-wait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    time-between-eviction-runs-millis: 60000
    validation-query: select 'x'
    time-between-eviction-runs-millis: 60000
    test-on-borrow: true
    test-on-return: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    pool-prepared-statements: false
    max-pool-prepared-statement-per-connection-size: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=true
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
    #monitor:
      #enabled: enabled # 配置此属性Monitor才生效
      #druid-stat-view: /druid/*
      #druid-web-stat-filter: /*
      #IP白名单
      #allow: 219.230.50.107,127.0.0.1
      #IP黑名单(共同存在时，deny优先于allow)
      #deny: 219.230.50.108
      #控制台管理用户
      #login-username: admin
      #login-password: 123456
      #exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
      #是否能够重置数据 禁用HTML页面上的“Reset All”功能
      #reset-enable: false

#mybatis:
#  type-aliases-package: com.mybatis.pojo
#  mapper-locations: classpath:mapper/*.xml
mybatis:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  #多mapper classpath:mapper/*.xml,classpath:test/*.xml
  mapper-locations: classpath:mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.mybatis.pojo

global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 3
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    # Sequence序列接口实现类配置
    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
#pagehelper分页插件
#pagehelper:
#  helperDialect: mysql
#  reasonable: true
#  supportMethodsArguments: true
#  params: count=countSql
logging:
  pattern:
    console: "%d - %msg%n"
  file: logs/demo.log
  level:
    com.**: info,debug
    org.**: info debug